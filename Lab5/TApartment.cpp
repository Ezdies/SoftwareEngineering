//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : TApartment.cpp
//  @ Date : 30.03.2023
//  @ Author : 
//
//


#include "TApartment.h"
#include "TOccupant.h"

TApartment::TApartment(){

}

TApartment::TApartment(string standard, float squareMeters, int roomCount, float rentCost, int numberOfRenovations, int value) {
    m_standard = standard;
    m_squareMeters = squareMeters;
    m_roomCount = roomCount;
    m_rentCost = rentCost;
    m_numberOfRenovations = numberOfRenovations;
    m_value = value;
}

TApartment::~TApartment() {
    std::cout << "Mieszkanie zostalo zniszczone\n";
}

string TApartment::getStandard() {
    return m_standard;
}

void TApartment::setStandard(string standard) {
    m_standard = standard;
}

float TApartment::getSquareMeters() {
    return m_squareMeters;
}

void TApartment::setSquareMeters(float squareMeters) {
    m_squareMeters = squareMeters;
}

float TApartment::getRentCost() {
    return m_rentCost;
}

void TApartment::setRentCost(float rentCost) {
    m_rentCost = rentCost;
}

int TApartment::getNumberOfRenovations() {
    return m_numberOfRenovations;
}

void TApartment::setNumberOfRenovations(int numberOfRenovations) {
    m_numberOfRenovations = numberOfRenovations;
}

int TApartment::getRoomCount(){
    return m_roomCount;
}

void TApartment::setRoomCount(int roomCount){
    m_roomCount = roomCount;
}

int TApartment::getValue(){
    return m_value;
}

void TApartment::setValue(int value){
    m_value = value;
}

void TApartment::renovateApartment(TOccupant* occupant) {
    occupant->doRenovation();
    m_numberOfRenovations++;
}

